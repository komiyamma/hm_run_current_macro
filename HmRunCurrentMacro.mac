/*
 * HmRunCurrentMacro v 1.0.0.2
 *
 * Copyright (c) 2024-2025 Akitsugu Komiyama
 * under the MIT License
 */


hidemaruversion "9.35.99";


jsmode "WebView2\\" + currentmacrofilename;

js {

function outputAlert(msg) {
    let dll = loaddll(hidemarudir() + "\\HmOutputPane.dll");
    dll.dllFuncW.OutputW(hidemaru.getCurrentWindowHandle(), msg + "\r\n");
}

try {
    if (!filename2()) {
        throw "何らかのマクロをファイルを開いて実行してください。";
    }

    if (filetype() != ".mac") {
        throw "開かれているのがマクロファイルではないようです。";
    }

    let currentFileFullPath = hidemaru.getFileFullPath();

    // このマクロの機能を自分自身を対象には出来ない。無限ループとなってしまう。
    if (currentFileFullPath.toLowerCase() == currentmacrofilename()) {
        throw "この「" + basename2() +"」自体を実行することは出来ません。";
    }

    var timerHandler;

    if (timerHandler) {
        hidemaru.clearTimeout(timerHandler);
    }

    // hidemaru.pushPostExecMacroFileの実行を確かなものとする関数
    function pushPostExecMacroFile(fileFullPath) {
        let isScheduled = false;

        // 実行を試みる関数
        function attemptExecution() {
            if (!isScheduled) {
                isScheduled = hidemaru.postExecMacroFile(fileFullPath) ?? true;
            }
            // 実行が成功していなければ、次の試行をセット
            if (!isScheduled) {
                timerHandler = hidemaru.setTimeout(attemptExecution, 100); // 100ミリ秒後に再度実行を試みる
            }
        }

        attemptExecution();
    }

    // 「今秀丸で開いているファイルの拡張子」が.macの時、「完全に新規のマクロ」扱いで実行する。
    if (filetype() == ".mac") {

        hidemaru.setStaticVariable("HmLastExecMacro", currentFileFullPath, 1);

        pushPostExecMacroFile(currentFileFullPath);
    }

} catch(err) {
   outputAlert(err)
}

}